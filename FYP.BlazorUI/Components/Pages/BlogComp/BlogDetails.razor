@page "/blogs/{Id:int}"
@using FYP.DAL.Entities
@rendermode InteractiveServer
@inject IBlogService BlogService
@inject NavigationManager Nav

<style>
    body {
        background-color: #f4f4f4;
    }

    .blog-card {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        max-width: 850px;
        margin: 40px auto;
        background-color: white;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border-radius: 12px;
        overflow: hidden;
    }

        .blog-card img {
            width: 100%;
            height: auto;
            display: block;
        }

    .blog-body {
        padding: 25px;
    }

    .blog-title {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 10px;
        color: #333;
    }

    .blog-date {
        font-size: 0.9rem;
        color: #777;
        margin-bottom: 20px;
    }

    .blog-content {
        font-size: 1.1rem;
        line-height: 1.6;
        color: #444;
        margin-bottom: 30px;
    }

    .btn-edit {
        background-color: #6c757d;
        color: white;
        border: none;
        margin-right: 10px;
    }

        .btn-edit:hover {
            background-color: #5a6268;
        }

    .btn-delete {
        background-color: #dc3545;
        color: white;
        border: none;
    }

        .btn-delete:hover {
            background-color: #c82333;
        }
</style>

<div class="blog-card">
    @if (!string.IsNullOrEmpty(blog?.ImagePath))
    {
        <img src="@blog.ImagePath" alt="Blog Image" />
    }

    <div class="blog-body">
        <div class="blog-title">@blog?.Title</div>
        <div class="blog-date">@blog?.CreatedAt.ToLocalTime()</div>

        <div class="blog-content">@blog?.Content</div>

        <a class="btn btn-edit" href="blogs/edit/@Id">Edit</a>
        <button class="btn btn-delete" @onclick="Delete">Delete</button>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Blog blog;

    protected override async Task OnInitializedAsync() =>
        blog = await BlogService.GetByIdAsync(Id);

    private async Task Delete()
    {
        await BlogService.DeleteAsync(Id);
        Nav.NavigateTo("/blogs");
    }
}
